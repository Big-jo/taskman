services:
  postgres:
    image: postgres:16
    container_name: taskman_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: taskman-db
    ports:
      - '7432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taskman_network

  redis:
    image: redis:7-alpine
    container_name: taskman_redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - taskman_network

  app:
    build: .
    container_name: taskman_backend
    restart: always
    depends_on:
      - postgres
      - redis
    ports:
      - '8000:8000'
    environment:
      - NODE_ENV=development
      - PORT=8000
      - HOST=0.0.0.0
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=taskman-db
      - DB_TYPE=postgres
      - DATABASE_SYNCHRONIZE=false
      - DATABASE_LOGGING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=24h
      - SALT_ROUNDS=10
      - ENVIRONMENT=development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: ["sh", "-c", "yarn run migration:run && yarn run start:dev"]
    networks:
      - taskman_network

volumes:
  postgres_data:
  redis_data:

networks:
  taskman_network:
    driver: bridge